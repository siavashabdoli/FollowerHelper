apply plugin: 'com.android.application'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"
    defaultConfig {
        applicationId "xyz.siavash.instagramhelper"
        minSdkVersion 10
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        applicationVariants.all { variant ->
            variant.buildConfigField "String", "CLIENT_ID", "\""+getClientID()+"\""
            variant.buildConfigField "String", "CLIENT_SECRET","\""+getClientSecret()+"\""
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:23.4.0'
    compile "com.android.support:design:23.4.0"
    compile 'com.android.support.constraint:constraint-layout:1.0.0-alpha1'
    testCompile 'junit:junit:4.12'
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.2'
    androidTestCompile 'com.android.support.test:runner:0.5'
    androidTestCompile 'com.android.support:support-annotations:23.4.0'
    compile "com.android.support:percent:23.4.0"
    compile 'io.reactivex:rxjava:1.1.5'
    compile 'io.reactivex:rxandroid:1.2.0'
    compile ('com.squareup.retrofit2:retrofit:2.1.0'){
        exclude module: 'okhttp'
    }
    compile 'com.squareup.retrofit2:adapter-rxjava:2.1.0'
    compile 'com.squareup.retrofit2:converter-gson:2.1.0'
    compile 'com.squareup.okhttp3:okhttp:3.0.1'
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'com.hannesdorfmann.mosby:viewstate:2.0.1'
    compile 'com.hannesdorfmann.mosby:mvp:2.0.1'
    compile 'com.jakewharton:butterknife:7.0.1'
}
def getClientID(){
    def Properties props = new Properties()
    props.load(new FileInputStream(new File('secrets.properties')))
    return props['CLIENT_ID']
}
def getClientSecret(){
    def Properties props = new Properties()
    props.load(new FileInputStream(new File('secrets.properties')))
    return props['CLIENT_SECRET']
}